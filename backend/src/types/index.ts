// Export API types explicitly to avoid conflicts
export type {
  PredictionType as APIPredictionType,
  ActionPlanContextRequest,
  ActionPlanOptionsRequest,
  ActionPlanRequest,
  ActionPlanResponse,
  ActionResponse,
  AggregatedMetricsResponse,
  AnalysisOptionsRequest,
  AnalysisSummaryResponse,
  ApiResponse,
  ChangePasswordRequest,
  ConnectionRequest,
  ConnectionResponse,
  ErrorResponse,
  FieldMappingRequest,
  FieldMappingResponse,
  GapAnalysisResponse,
  GapResponse,
  IntegrationConfigurationRequest,
  IntegrationConfigurationResponse,
  IntegrationFiltersRequest,
  LoginRequest,
  LoginResponse,
  MetricResponse,
  MetricTrendResponse,
  MetricsRequest,
  MetricsResponse,
  NotificationChannelPreference,
  NotificationHistoryRequest,
  NotificationPreferencesRequest,
  NotificationRecipientResponse,
  NotificationRequest,
  NotificationResponse,
  PaginatedResponse,
  PerformanceMetricsResponse,
  PredictionAccuracyResponse,
  PredictionHistoryRequest,
  PredictionItemResponse,
  PredictionRecommendationResponse,
  PredictionRequest,
  PredictionResponse,
  ProgressMetricsResponse,
  ProjectAnalysisRequest,
  ProjectGoalsRequest,
  ProjectMetricsResponse,
  ProjectStateRequest,
  QualityMetricsRequest,
  QualityMetricsResponse,
  RecommendationResponse,
  RefreshTokenRequest,
  RegisterRequest,
  ResetPasswordRequest,
  ResourceEstimateResponse,
  ResourceRequirementRequest,
  RiskIndicatorResponse,
  RiskMitigationResponse,
  SyncErrorResponse,
  SyncRequest,
  SyncResponse,
  TeamMetricsResponse,
  TimelineMilestoneResponse,
  TimelinePhaseResponse,
  TimelineResponse,
  UserResponse,
} from './api';

// Export database types
export * from './database';
// Export error types explicitly to avoid conflicts
export type {
  AuthenticationError,
  AuthorizationError,
  BaseError,
  BusinessLogicError,
  ConflictError,
  ConnectionError,
  DatabaseError,
  ErrorAlert,
  ErrorCategory,
  ErrorCode,
  ErrorContext,
  ErrorMetrics,
  ErrorRecoveryStrategy,
  ErrorResponseBuilder,
  ErrorSeverity,
  EscalationRule,
  ExternalServiceError,
  ForbiddenError,
  GapAnalysisError,
  HttpError,
  MLModelError,
  ModelInferenceError,
  ModelTrainingError,
  NotFoundError,
  NotificationError,
  PredictionError,
  RateLimitError,
  ErrorResponse as ServiceErrorResponse,
  IntegrationError as ServiceIntegrationErrorType,
  SystemError,
  ThirdPartyAPIError,
  TransactionError,
  UnauthorizedError,
  ValidationError,
} from './errors';
// Export services types with explicit naming to avoid conflicts
export type {
  Action,
  ActionPlan,
  AggregatedMetrics,
  Alert,
  AuthResult,
  AuthUser,
  CategorizedGaps,
  CreateTenantData,
  CustomMetric,
  Duration,
  GapAnalysisResult,
  HistoricalData,
  IActionPlanGenerator,
  IAuthService,
  IGapAnalysisService,
  IIntegrationService,
  IMetricsService,
  INotificationService,
  IPredictiveService,
  ITenantService,
  LoginCredentials,
  Metric,
  MetricTrend,
  NotificationData,
  NotificationFilters,
  PerformanceMetrics,
  PrioritizedAction,
  ProgressMetrics,
  ProjectAnalysisData,
  ProjectEvent,
  ProjectGoals,
  ProjectMetrics,
  QualityMetrics,
  QualityRequirements,
  RealtimeMetrics,
  RecoveryAction,
  RegisterData,
  Resource,
  ResourceEstimate,
  ResourceRequirements,
  RiskAssessment,
  RiskMitigation,
  ServiceHealth,
  ServiceIntegrationError,
  ServiceMilestone,
  ServiceProjectState,
  ServiceQualityState,
  ServiceResourceState,
  ServiceRiskIndicator,
  ServiceTimelineState,
  SyncResult,
  SystemHealth,
  TeamMetrics,
  TenantFilters,
  TenantResult,
  TenantSettings,
  TimeRange,
  Timeline,
  TimelineRequirements,
  TokenValidation,
  TrendData,
  UpdateTenantData,
  ValidationResult,
} from './services';
export * from './validation';
