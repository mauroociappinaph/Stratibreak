# Docker Compose configuration for Stratibreak development environment

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stratibreak-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: stratibreak_dev
      POSTGRES_USER: stratibreak_user
      POSTGRES_PASSWORD: stratibreak_pass
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - stratibreak-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U stratibreak_user -d stratibreak_dev']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: stratibreak-redis
    restart: unless-stopped
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data
    networks:
      - stratibreak-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: stratibreak-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@stratibreak.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - stratibreak-network
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  stratibreak-network:
    driver: bridge
