name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    environment: staging
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build applications
        run: |
          pnpm --filter backend build
          pnpm --filter frontend build

      - name: Build and push Docker images
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin

          # Build and tag images
          docker build -t $DOCKER_REGISTRY/backend:staging ./backend
          docker build -t $DOCKER_REGISTRY/frontend:staging ./frontend
          docker build -t $DOCKER_REGISTRY/ml-services:staging ./ml-services

          # Push images
          docker push $DOCKER_REGISTRY/backend:staging
          docker push $DOCKER_REGISTRY/frontend:staging
          docker push $DOCKER_REGISTRY/ml-services:staging

      - name: Deploy to staging
        run: |
          # Aquí irían los comandos específicos de deploy
          # Por ejemplo, kubectl, helm, o scripts de deploy
          echo "Deploying to staging environment..."

  deploy-production:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    needs: [deploy-staging]
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build applications
        run: |
          pnpm --filter backend build
          pnpm --filter frontend build

      - name: Build and push Docker images
        env:
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin

          # Build and tag images
          docker build -t $DOCKER_REGISTRY/backend:latest ./backend
          docker build -t $DOCKER_REGISTRY/frontend:latest ./frontend
          docker build -t $DOCKER_REGISTRY/ml-services:latest ./ml-services

          # Push images
          docker push $DOCKER_REGISTRY/backend:latest
          docker push $DOCKER_REGISTRY/frontend:latest
          docker push $DOCKER_REGISTRY/ml-services:latest

      - name: Deploy to production
        run: |
          # Comandos de deploy a producción
          echo "Deploying to production environment..."
